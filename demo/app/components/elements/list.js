System.register(["angular2/core", "ng-semantic/semantic", "../../services/data"], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, semantic_1, data_1;
    var ListComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (semantic_1_1) {
                semantic_1 = semantic_1_1;
            },
            function (data_1_1) {
                data_1 = data_1_1;
            }],
        execute: function() {
            ListComponent = (function () {
                function ListComponent(ds) {
                    this.ds = ds;
                    this.flatArray = ds.array("flat");
                    this.usersArray = ds.array("users");
                }
                ListComponent = __decorate([
                    core_1.Component({
                        selector: "list",
                        providers: [data_1.DataServices]
                    }),
                    core_1.View({
                        directives: [semantic_1.SEMANTIC_COMPONENTS, semantic_1.SEMANTIC_DIRECTIVES],
                        template: "\n    <div class=\"ui masthead vertical segment\">\n        <div class=\"ui container\">\n            <h1>List</h1>\n            <p>Semantic UI list element <i class=\"icon external\"></i>\n            <a href=\"http://semantic-ui.com/elements/list.html\" target=\"_blank\">Semantic UI List</a></p>\n        </div>\n    </div>\n    <div class=\"main ui container\">\n        <h4 class=\"ui header\">Demo Normal</h4>\n        <sm-list class=\"\">\n            <sm-item *ngFor=\"#item of flatArray | async\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n\n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n\n        <h4 class=\"ui header\">Demo Bulleted</h4>\n        <sm-list class=\"bulleted\">\n            <sm-item *ngFor=\"#item of flatArray | async\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n\n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"bulleted\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n\n        <h4 class=\"ui header\">Demo Ordered</h4>\n        <sm-list class=\"ordered\">\n            <sm-item *ngFor=\"#item of flatArray | async\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"ordered\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n\n        <h4 class=\"ui header\">Demo Avatar</h4>\n        <sm-list class=\"\">\n            <sm-item *ngFor=\"#item of usersArray | async\" class=\"item\" [image]=\"item.avatar\">{{item.user}}</sm-item>\n        </sm-list>\n\n        <br/><br/>\n        Page source: <a target=\"_blank\" href=\"https://github.com/vladotesanovic/ngSemantic/blob/master/src/app/components/elements/list.ts\">\n        https://github.com/vladotesanovic/ngSemantic/blob/master/src/app/components/elements/list.ts\n      </a>\n    </div>\n    "
                    }), 
                    __metadata('design:paramtypes', [data_1.DataServices])
                ], ListComponent);
                return ListComponent;
            })();
            exports_1("ListComponent", ListComponent);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9lbGVtZW50cy9saXN0LnRzIl0sIm5hbWVzIjpbIkxpc3RDb21wb25lbnQiLCJMaXN0Q29tcG9uZW50LmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFJQTtnQkErRUlBLHVCQUFtQkEsRUFBZ0JBO29CQUFoQkMsT0FBRUEsR0FBRkEsRUFBRUEsQ0FBY0E7b0JBQy9CQSxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtvQkFDbENBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO2dCQUN4Q0EsQ0FBQ0E7Z0JBbEZMRDtvQkFBQ0EsZ0JBQVNBLENBQUNBO3dCQUNQQSxRQUFRQSxFQUFFQSxNQUFNQTt3QkFDaEJBLFNBQVNBLEVBQUVBLENBQUNBLG1CQUFZQSxDQUFDQTtxQkFDNUJBLENBQUNBO29CQUNEQSxXQUFJQSxDQUFDQTt3QkFDRkEsVUFBVUEsRUFBRUEsQ0FBQ0EsOEJBQW1CQSxFQUFFQSw4QkFBbUJBLENBQUNBO3dCQUN0REEsUUFBUUEsRUFBRUEsOHdGQWtFVEE7cUJBQ0pBLENBQUNBOztrQ0FVREE7Z0JBQURBLG9CQUFDQTtZQUFEQSxDQUFDQSxBQW5GRCxJQW1GQztZQW5GRCx5Q0FtRkMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlldyB9IGZyb20gXCJhbmd1bGFyMi9jb3JlXCI7XHJcbmltcG9ydCB7IFNFTUFOVElDX0NPTVBPTkVOVFMsIFNFTUFOVElDX0RJUkVDVElWRVMgfSBmcm9tIFwibmctc2VtYW50aWMvc2VtYW50aWNcIjtcclxuaW1wb3J0IHsgRGF0YVNlcnZpY2VzIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RhdGFcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwibGlzdFwiLFxyXG4gICAgcHJvdmlkZXJzOiBbRGF0YVNlcnZpY2VzXVxyXG59KVxyXG5AVmlldyh7XHJcbiAgICBkaXJlY3RpdmVzOiBbU0VNQU5USUNfQ09NUE9ORU5UUywgU0VNQU5USUNfRElSRUNUSVZFU10sXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBjbGFzcz1cInVpIG1hc3RoZWFkIHZlcnRpY2FsIHNlZ21lbnRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidWkgY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxoMT5MaXN0PC9oMT5cclxuICAgICAgICAgICAgPHA+U2VtYW50aWMgVUkgbGlzdCBlbGVtZW50IDxpIGNsYXNzPVwiaWNvbiBleHRlcm5hbFwiPjwvaT5cclxuICAgICAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly9zZW1hbnRpYy11aS5jb20vZWxlbWVudHMvbGlzdC5odG1sXCIgdGFyZ2V0PVwiX2JsYW5rXCI+U2VtYW50aWMgVUkgTGlzdDwvYT48L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJtYWluIHVpIGNvbnRhaW5lclwiPlxyXG4gICAgICAgIDxoNCBjbGFzcz1cInVpIGhlYWRlclwiPkRlbW8gTm9ybWFsPC9oND5cclxuICAgICAgICA8c20tbGlzdCBjbGFzcz1cIlwiPlxyXG4gICAgICAgICAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXkgfCBhc3luY1wiIGNsYXNzPVwiaXRlbVwiPnt7aXRlbX19PC9zbS1pdGVtPlxyXG4gICAgICAgIDwvc20tbGlzdD5cclxuXHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+Q29kZTwvaDQ+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVpIGZvcm1cIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XHJcbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz1cIjRcIiByZWFkb25seSBjbGFzcz1cImNvZGVcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBhdXRvY29ycmVjdD1cIm9mZlwiIGF1dG9jYXBpdGFsaXplPVwib2ZmXCIgc3BlbGxjaGVjaz1cImZhbHNlXCI+XHJcbjxzbS1saXN0IGNsYXNzPVwiXCI+XHJcbiAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXlcIiBjbGFzcz1cIml0ZW1cIj57IHtpdGVtfSB9PC9zbS1pdGVtPlxyXG48L3NtLWxpc3Q+XHJcbiAgICAgICAgICAgICAgICA8L3RleHRhcmVhPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+RGVtbyBCdWxsZXRlZDwvaDQ+XHJcbiAgICAgICAgPHNtLWxpc3QgY2xhc3M9XCJidWxsZXRlZFwiPlxyXG4gICAgICAgICAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXkgfCBhc3luY1wiIGNsYXNzPVwiaXRlbVwiPnt7aXRlbX19PC9zbS1pdGVtPlxyXG4gICAgICAgIDwvc20tbGlzdD5cclxuXHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+Q29kZTwvaDQ+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVpIGZvcm1cIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XHJcbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz1cIjRcIiByZWFkb25seSBjbGFzcz1cImNvZGVcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBhdXRvY29ycmVjdD1cIm9mZlwiIGF1dG9jYXBpdGFsaXplPVwib2ZmXCIgc3BlbGxjaGVjaz1cImZhbHNlXCI+XHJcbjxzbS1saXN0IGNsYXNzPVwiYnVsbGV0ZWRcIj5cclxuICAgIDxzbS1pdGVtICpuZ0Zvcj1cIiNpdGVtIG9mIGZsYXRBcnJheVwiIGNsYXNzPVwiaXRlbVwiPnsge2l0ZW19IH08L3NtLWl0ZW0+XHJcbjwvc20tbGlzdD5cclxuICAgICAgICAgICAgICAgIDwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8aDQgY2xhc3M9XCJ1aSBoZWFkZXJcIj5EZW1vIE9yZGVyZWQ8L2g0PlxyXG4gICAgICAgIDxzbS1saXN0IGNsYXNzPVwib3JkZXJlZFwiPlxyXG4gICAgICAgICAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXkgfCBhc3luY1wiIGNsYXNzPVwiaXRlbVwiPnt7aXRlbX19PC9zbS1pdGVtPlxyXG4gICAgICAgIDwvc20tbGlzdD5cclxuICAgICAgICA8aDQgY2xhc3M9XCJ1aSBoZWFkZXJcIj5Db2RlPC9oND5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidWkgZm9ybVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cclxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVwiNFwiIHJlYWRvbmx5IGNsYXNzPVwiY29kZVwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIGF1dG9jb3JyZWN0PVwib2ZmXCIgYXV0b2NhcGl0YWxpemU9XCJvZmZcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIj5cclxuPHNtLWxpc3QgY2xhc3M9XCJvcmRlcmVkXCI+XHJcbiAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXlcIiBjbGFzcz1cIml0ZW1cIj57IHtpdGVtfSB9PC9zbS1pdGVtPlxyXG48L3NtLWxpc3Q+XHJcbiAgICAgICAgICAgICAgICA8L3RleHRhcmVhPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+RGVtbyBBdmF0YXI8L2g0PlxyXG4gICAgICAgIDxzbS1saXN0IGNsYXNzPVwiXCI+XHJcbiAgICAgICAgICAgIDxzbS1pdGVtICpuZ0Zvcj1cIiNpdGVtIG9mIHVzZXJzQXJyYXkgfCBhc3luY1wiIGNsYXNzPVwiaXRlbVwiIFtpbWFnZV09XCJpdGVtLmF2YXRhclwiPnt7aXRlbS51c2VyfX08L3NtLWl0ZW0+XHJcbiAgICAgICAgPC9zbS1saXN0PlxyXG5cclxuICAgICAgICA8YnIvPjxici8+XHJcbiAgICAgICAgUGFnZSBzb3VyY2U6IDxhIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdmxhZG90ZXNhbm92aWMvbmdTZW1hbnRpYy9ibG9iL21hc3Rlci9zcmMvYXBwL2NvbXBvbmVudHMvZWxlbWVudHMvbGlzdC50c1wiPlxyXG4gICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFkb3Rlc2Fub3ZpYy9uZ1NlbWFudGljL2Jsb2IvbWFzdGVyL3NyYy9hcHAvY29tcG9uZW50cy9lbGVtZW50cy9saXN0LnRzXHJcbiAgICAgIDwvYT5cclxuICAgIDwvZGl2PlxyXG4gICAgYFxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIExpc3RDb21wb25lbnQge1xyXG4gICAgZmxhdEFycmF5OiBhbnk7XHJcbiAgICB1c2Vyc0FycmF5OiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHVibGljIGRzOiBEYXRhU2VydmljZXMpIHtcclxuICAgICAgICB0aGlzLmZsYXRBcnJheSA9IGRzLmFycmF5KFwiZmxhdFwiKTtcclxuICAgICAgICB0aGlzLnVzZXJzQXJyYXkgPSBkcy5hcnJheShcInVzZXJzXCIpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==