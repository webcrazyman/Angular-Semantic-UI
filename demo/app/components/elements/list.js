System.register(["angular2/core", "ng-semantic/semantic", "../../services/data"], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, semantic_1, data_1;
    var ListComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (semantic_1_1) {
                semantic_1 = semantic_1_1;
            },
            function (data_1_1) {
                data_1 = data_1_1;
            }],
        execute: function() {
            ListComponent = (function () {
                function ListComponent(ds) {
                    var _this = this;
                    this.ds = ds;
                    this.flatArray = [];
                    ds.flatArray().subscribe(function (data) {
                        _this.flatArray = JSON.parse(data._body);
                    });
                }
                ListComponent = __decorate([
                    core_1.Component({
                        selector: "list",
                        providers: [data_1.DataServices]
                    }),
                    core_1.View({
                        directives: [semantic_1.SEMANTIC_COMPONENTS, semantic_1.SEMANTIC_DIRECTIVES],
                        template: "\n    <div class=\"ui masthead vertical segment\">\n        <div class=\"ui container\">\n            <h1>List</h1>\n            <p>Semantic UI list element <i class=\"icon external\"></i> \n            <a href=\"http://semantic-ui.com/elements/list.html\" target=\"_blank\">Semantic UI List</a></p>\n        </div>\n    </div>\n    <div class=\"main ui container\">\n        <h4 class=\"ui header\">Demo Normal</h4>\n        <sm-list class=\"\">\n            <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n        \n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n        \n        <h4 class=\"ui header\">Demo Bulleted</h4>\n        <sm-list class=\"bulleted\">\n            <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n        \n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"bulleted\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n        \n        <h4 class=\"ui header\">Demo Ordered</h4>\n        <sm-list class=\"ordered\">\n            <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{{item}}</sm-item>\n        </sm-list>\n        <h4 class=\"ui header\">Code</h4>\n        <div class=\"ui form\">\n            <div class=\"field\">\n                <textarea rows=\"4\" readonly class=\"code\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n<sm-list class=\"ordered\">\n    <sm-item *ngFor=\"#item of flatArray\" class=\"item\">{ {item} }</sm-item>\n</sm-list>\n                </textarea>\n            </div>\n        </div>\n        \n        <br/><br/>\n        Page source: <a target=\"_blank\" href=\"https://github.com/vladotesanovic/ngSemantic/blob/master/src/app/components/elements/list.ts\">\n        https://github.com/vladotesanovic/ngSemantic/blob/master/src/app/components/elements/list.ts\n      </a> \n    </div>\n    "
                    }), 
                    __metadata('design:paramtypes', [data_1.DataServices])
                ], ListComponent);
                return ListComponent;
            })();
            exports_1("ListComponent", ListComponent);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9lbGVtZW50cy9saXN0LnRzIl0sIm5hbWVzIjpbIkxpc3RDb21wb25lbnQiLCJMaXN0Q29tcG9uZW50LmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFJQTtnQkF3RUNBLHVCQUFtQkEsRUFBZ0JBO29CQXhFcENDLGlCQTZFQ0E7b0JBTG1CQSxPQUFFQSxHQUFGQSxFQUFFQSxDQUFjQTtvQkFEaENBLGNBQVNBLEdBQWVBLEVBQUVBLENBQUNBO29CQUU3QkEsRUFBRUEsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsVUFBQ0EsSUFBU0E7d0JBQ3pCQSxLQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQTtvQkFDbERBLENBQUNBLENBQUNBLENBQUNBO2dCQUNKQSxDQUFDQTtnQkE1RUZEO29CQUFDQSxnQkFBU0EsQ0FBQ0E7d0JBQ1BBLFFBQVFBLEVBQUdBLE1BQU1BO3dCQUNqQkEsU0FBU0EsRUFBRUEsQ0FBQ0EsbUJBQVlBLENBQUNBO3FCQUM1QkEsQ0FBQ0E7b0JBQ0RBLFdBQUlBLENBQUNBO3dCQUNGQSxVQUFVQSxFQUFFQSxDQUFDQSw4QkFBbUJBLEVBQUVBLDhCQUFtQkEsQ0FBQ0E7d0JBQ3REQSxRQUFRQSxFQUFHQSw4akZBNkRWQTtxQkFDSkEsQ0FBQ0E7O2tDQVNEQTtnQkFBREEsb0JBQUNBO1lBQURBLENBQUNBLEFBN0VELElBNkVDO1lBN0VELHlDQTZFQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3IH0gZnJvbSBcImFuZ3VsYXIyL2NvcmVcIjtcclxuaW1wb3J0IHsgU0VNQU5USUNfQ09NUE9ORU5UUywgU0VNQU5USUNfRElSRUNUSVZFUyB9IGZyb20gXCJuZy1zZW1hbnRpYy9zZW1hbnRpY1wiO1xyXG5pbXBvcnQgeyBEYXRhU2VydmljZXMgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZGF0YVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvciA6IFwibGlzdFwiLFxyXG4gICAgcHJvdmlkZXJzOiBbRGF0YVNlcnZpY2VzXVxyXG59KVxyXG5AVmlldyh7XHJcbiAgICBkaXJlY3RpdmVzOiBbU0VNQU5USUNfQ09NUE9ORU5UUywgU0VNQU5USUNfRElSRUNUSVZFU10sXHJcbiAgICB0ZW1wbGF0ZSA6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJ1aSBtYXN0aGVhZCB2ZXJ0aWNhbCBzZWdtZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVpIGNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8aDE+TGlzdDwvaDE+XHJcbiAgICAgICAgICAgIDxwPlNlbWFudGljIFVJIGxpc3QgZWxlbWVudCA8aSBjbGFzcz1cImljb24gZXh0ZXJuYWxcIj48L2k+IFxyXG4gICAgICAgICAgICA8YSBocmVmPVwiaHR0cDovL3NlbWFudGljLXVpLmNvbS9lbGVtZW50cy9saXN0Lmh0bWxcIiB0YXJnZXQ9XCJfYmxhbmtcIj5TZW1hbnRpYyBVSSBMaXN0PC9hPjwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIm1haW4gdWkgY29udGFpbmVyXCI+XHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+RGVtbyBOb3JtYWw8L2g0PlxyXG4gICAgICAgIDxzbS1saXN0IGNsYXNzPVwiXCI+XHJcbiAgICAgICAgICAgIDxzbS1pdGVtICpuZ0Zvcj1cIiNpdGVtIG9mIGZsYXRBcnJheVwiIGNsYXNzPVwiaXRlbVwiPnt7aXRlbX19PC9zbS1pdGVtPlxyXG4gICAgICAgIDwvc20tbGlzdD5cclxuICAgICAgICBcclxuICAgICAgICA8aDQgY2xhc3M9XCJ1aSBoZWFkZXJcIj5Db2RlPC9oND5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidWkgZm9ybVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cclxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVwiNFwiIHJlYWRvbmx5IGNsYXNzPVwiY29kZVwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIGF1dG9jb3JyZWN0PVwib2ZmXCIgYXV0b2NhcGl0YWxpemU9XCJvZmZcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIj5cclxuPHNtLWxpc3QgY2xhc3M9XCJcIj5cclxuICAgIDxzbS1pdGVtICpuZ0Zvcj1cIiNpdGVtIG9mIGZsYXRBcnJheVwiIGNsYXNzPVwiaXRlbVwiPnsge2l0ZW19IH08L3NtLWl0ZW0+XHJcbjwvc20tbGlzdD5cclxuICAgICAgICAgICAgICAgIDwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxoNCBjbGFzcz1cInVpIGhlYWRlclwiPkRlbW8gQnVsbGV0ZWQ8L2g0PlxyXG4gICAgICAgIDxzbS1saXN0IGNsYXNzPVwiYnVsbGV0ZWRcIj5cclxuICAgICAgICAgICAgPHNtLWl0ZW0gKm5nRm9yPVwiI2l0ZW0gb2YgZmxhdEFycmF5XCIgY2xhc3M9XCJpdGVtXCI+e3tpdGVtfX08L3NtLWl0ZW0+XHJcbiAgICAgICAgPC9zbS1saXN0PlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxoNCBjbGFzcz1cInVpIGhlYWRlclwiPkNvZGU8L2g0PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1aSBmb3JtXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmaWVsZFwiPlxyXG4gICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XCI0XCIgcmVhZG9ubHkgY2xhc3M9XCJjb2RlXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgYXV0b2NvcnJlY3Q9XCJvZmZcIiBhdXRvY2FwaXRhbGl6ZT1cIm9mZlwiIHNwZWxsY2hlY2s9XCJmYWxzZVwiPlxyXG48c20tbGlzdCBjbGFzcz1cImJ1bGxldGVkXCI+XHJcbiAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXlcIiBjbGFzcz1cIml0ZW1cIj57IHtpdGVtfSB9PC9zbS1pdGVtPlxyXG48L3NtLWxpc3Q+XHJcbiAgICAgICAgICAgICAgICA8L3RleHRhcmVhPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgICAgICA8aDQgY2xhc3M9XCJ1aSBoZWFkZXJcIj5EZW1vIE9yZGVyZWQ8L2g0PlxyXG4gICAgICAgIDxzbS1saXN0IGNsYXNzPVwib3JkZXJlZFwiPlxyXG4gICAgICAgICAgICA8c20taXRlbSAqbmdGb3I9XCIjaXRlbSBvZiBmbGF0QXJyYXlcIiBjbGFzcz1cIml0ZW1cIj57e2l0ZW19fTwvc20taXRlbT5cclxuICAgICAgICA8L3NtLWxpc3Q+XHJcbiAgICAgICAgPGg0IGNsYXNzPVwidWkgaGVhZGVyXCI+Q29kZTwvaDQ+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInVpIGZvcm1cIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XHJcbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz1cIjRcIiByZWFkb25seSBjbGFzcz1cImNvZGVcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBhdXRvY29ycmVjdD1cIm9mZlwiIGF1dG9jYXBpdGFsaXplPVwib2ZmXCIgc3BlbGxjaGVjaz1cImZhbHNlXCI+XHJcbjxzbS1saXN0IGNsYXNzPVwib3JkZXJlZFwiPlxyXG4gICAgPHNtLWl0ZW0gKm5nRm9yPVwiI2l0ZW0gb2YgZmxhdEFycmF5XCIgY2xhc3M9XCJpdGVtXCI+eyB7aXRlbX0gfTwvc20taXRlbT5cclxuPC9zbS1saXN0PlxyXG4gICAgICAgICAgICAgICAgPC90ZXh0YXJlYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPGJyLz48YnIvPlxyXG4gICAgICAgIFBhZ2Ugc291cmNlOiA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3ZsYWRvdGVzYW5vdmljL25nU2VtYW50aWMvYmxvYi9tYXN0ZXIvc3JjL2FwcC9jb21wb25lbnRzL2VsZW1lbnRzL2xpc3QudHNcIj5cclxuICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vdmxhZG90ZXNhbm92aWMvbmdTZW1hbnRpYy9ibG9iL21hc3Rlci9zcmMvYXBwL2NvbXBvbmVudHMvZWxlbWVudHMvbGlzdC50c1xyXG4gICAgICA8L2E+IFxyXG4gICAgPC9kaXY+XHJcbiAgICBgXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTGlzdENvbXBvbmVudCB7XHJcbiAgICBmbGF0QXJyYXk6IEFycmF5PGFueT4gPSBbXTtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgZHM6IERhdGFTZXJ2aWNlcykge1xyXG5cdFx0ZHMuZmxhdEFycmF5KCkuc3Vic2NyaWJlKChkYXRhOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5mbGF0QXJyYXkgPSBKU09OLnBhcnNlKGRhdGEuX2JvZHkpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG59XHJcbiJdfQ==